#!/usr/bin/env node

const util = require('util');
const exec = util.promisify(require('child_process').exec);
const { readFile } = require('fs/promises')
const { homedir } = require('os');

const PROJECTS_DIR = `${homedir()}/repos`;

// ~8gigs
const NODE_OPTIONS="--max_old_space_size=8192"

const PREDEFINED_PROJECTS = {
  "payment settings": "settings-ui-payments",
  "product settings": "settings-ui-products products-ui",
  "payments + crm index": "settings-ui-products products-ui",
  "payments + record index": "settings-ui-products products-ui",
};

async function execute(command) {
  const { stdout } = await exec(command);
  return stdout.trim();
}

(async () => {
  if (process.cwd() !== PROJECTS_DIR) {
    console.error('wrong dir, expected', PROJECTS_DIR)
    process.exit(1);
  }

  const arg = process.argv.slice(2)[0];
  if (arg === 'project') {
    const project = await execute(`gum choose --height 15 ${Object.keys(PREDEFINED_PROJECTS).join('\n')}`);
    execute(`bend reactor serve ${PREDEFINED_PROJECTS[project]}`);
  }//
  const project_directories = await execute(`ls -d */ | cut -f1 -d '/'`).then(res => res);
  console.log(project_directories)
  const choices = await execute(`gum choose --no-limit --height 15 ${project_directories}`);
  const bend_args = choices.replace(/\\\n/g, " ")

  execute(`bend reactor serve ${choices}`);

})()
